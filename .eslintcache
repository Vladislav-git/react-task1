[{"D:\\js\\staj\\react\\react-task1\\todo\\src\\index.js":"1","D:\\js\\staj\\react\\react-task1\\todo\\src\\components\\form-list-filter\\form-list-filter.js":"2","D:\\js\\staj\\react\\react-task1\\todo\\src\\components\\form-add\\form-add.js":"3","D:\\js\\staj\\react\\react-task1\\todo\\src\\components\\form-item\\form-item.js":"4","D:\\js\\staj\\react\\react-task1\\todo\\src\\components\\form-list\\form-list.js":"5","D:\\js\\staj\\react\\react-task1\\todo\\src\\container\\app\\app.js":"6"},{"size":213,"mtime":1609187667292,"results":"7","hashOfConfig":"8"},{"size":478,"mtime":1609176912201,"results":"9","hashOfConfig":"8"},{"size":6739,"mtime":1609187390954,"results":"10","hashOfConfig":"8"},{"size":1024,"mtime":1609187462946,"results":"11","hashOfConfig":"8"},{"size":563,"mtime":1609179817232,"results":"12","hashOfConfig":"8"},{"size":3636,"mtime":1609187633111,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iynssy",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\js\\staj\\react\\react-task1\\todo\\src\\index.js",[],"D:\\js\\staj\\react\\react-task1\\todo\\src\\components\\form-list-filter\\form-list-filter.js",[],["28","29"],"D:\\js\\staj\\react\\react-task1\\todo\\src\\components\\form-add\\form-add.js",["30","31"],"import React, {useEffect, useState, useRef} from 'react';\r\nimport './form-add.css';\r\n\r\nconst default_model = {\r\n    task_name: '',\r\n    firstname: '',\r\n    secondname: '',\r\n    email: '',\r\n    deadeline: '1',\r\n    description: '',\r\n    id: 0\r\n};\r\n\r\n\r\nconst formValid = ({errorForm, model}) => {\r\n    let valid = true;\r\n    Object.values(errorForm).forEach(val => {\r\n        val.length > 0 && (valid = false);\r\n    })\r\n    Object.values(model).forEach(val => {\r\n        val === null && (valid = false);\r\n    })\r\n    return valid;\r\n}\r\n\r\nexport default function FormAdd ({data, onChangeAdd}) {\r\n\r\n    const initialState = { model: default_model,\r\n        errorForm: {\r\n            task_name: '',\r\n            firstname: '',\r\n            secondname: '',\r\n            email: '',\r\n            deadeline: '',\r\n            description: '',\r\n        }\r\n    };\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (formValid(state)) {\r\n            const {model} = state\r\n            onChangeAdd(model)\r\n        } else {\r\n            console.error('error')\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n        const {name, value} = event.target;\r\n        let errorForm = state.errorForm;\r\n        \r\n        switch (name) {\r\n            case 'task_name':\r\n                errorForm.task_name = value.length < 3 \r\n                    ? '3 char req' \r\n                    : '';\r\n                break;\r\n            case 'firstname':\r\n                errorForm.firstname = value.length < 3\r\n                    ? '3 char req' \r\n                    : '';\r\n                break;\r\n            case 'secondname':\r\n                errorForm.secondname = value.length < 3\r\n                    ? '3 char req' \r\n                    : '';\r\n                break;\r\n            case 'email':\r\n                errorForm.email = value.match(/[a-zA-z]+@[a-zA-Z]+?\\.[a-zA-Z]{2,6}/) === null\r\n                    ? 'wrong email name'\r\n                    : '';\r\n                break;\r\n            case 'deadline':\r\n                errorForm.deadeline = value.length > 0\r\n                    ? ''\r\n                    : 'error';\r\n                break;\r\n            case 'description':\r\n                errorForm.description = value.length < 3\r\n                    ? '3 char req' \r\n                    : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setState({\r\n            ...state,\r\n            errorForm, \r\n            model: {\r\n                ...state.model,\r\n                [name]: value,\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data.id) {\r\n            setState({\r\n                ...state,\r\n                model: data\r\n            })\r\n        } else {\r\n            setState({\r\n                ...state, \r\n                model: default_model\r\n            })\r\n        }\r\n    }, [data.id])\r\n\r\n    \r\n    const {errorForm, model} = state;\r\n    \r\n    return (\r\n        <form className='form' >\r\n            <h3 className='header'>Add task</h3>\r\n            <div>\r\n                <label>Task name: </label>\r\n                <input\r\n                    className={errorForm.task_name.length > 0 ? 'error' : null}\r\n                    value={model.task_name}\r\n                    type='text'\r\n                    placeholder='task name'\r\n                    name='task_name'\r\n                    onChange={handleChange}\r\n                />\r\n                {errorForm.task_name.length > 0 && (\r\n                    <div className='input-notify'>{errorForm.task_name}</div>\r\n                )}\r\n            </div>\r\n            <div>\r\n                <label>Firstname: </label>\r\n                <input\r\n                    className={errorForm.firstname.length > 0 ? 'error' : null}\r\n                    value={model.firstname}\r\n                    type='text'\r\n                    placeholder='firstname'\r\n                    name='firstname'\r\n                    onChange={handleChange}\r\n                />\r\n                {errorForm.firstname.length > 0 && (\r\n                    <div className='input-notify'>{errorForm.firstname}</div>\r\n                )}\r\n            </div>\r\n            <div>\r\n                <label>Secondname: </label>\r\n                <input\r\n                    className={errorForm.secondname.length > 0 ? 'error' : null}\r\n                    value={model.secondname}\r\n                    type='text'\r\n                    placeholder='secondname'\r\n                    name='secondname'\r\n                    onChange={handleChange}\r\n                />\r\n                {errorForm.secondname.length > 0 && (\r\n                    <div className='input-notify'>{errorForm.secondname}</div>\r\n                )}\r\n            </div>\r\n            <div>\r\n                <label>Email: </label>\r\n                <input\r\n                    className={errorForm.email.length > 0 ? 'error' : null}\r\n                    value={model.email}\r\n                    type='text'\r\n                    placeholder='email'\r\n                    name='email'\r\n                    onChange={handleChange}\r\n                />\r\n                {errorForm.email.length > 0 && (\r\n                    <div className='input-notify'>{errorForm.email}</div>\r\n                )}\r\n            </div>\r\n            <div className='select'>\r\n                <label>Deadline: </label>\r\n                <select name='deadeline' value={model.deadeline} onChange={handleChange}>\r\n                    <option value='1'>1 hour</option>\r\n                    <option value='3'>3 hours</option>\r\n                    <option value='5'>5 hours</option>\r\n                    <option value='24'>1 day</option>\r\n                    <option value='48'>2 days</option>\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <div className='description'>Task description: </div>\r\n                <input\r\n                    className={errorForm.description.length > 0 ? 'error' : null}\r\n                    value={model.description}\r\n                    type='text'\r\n                    placeholder='Description'\r\n                    name='description'\r\n                    onChange={handleChange}\r\n                />\r\n                {errorForm.description.length > 0 && (\r\n                    <div className='input-notify'>{errorForm.description}</div>\r\n                )}\r\n            </div>\r\n            <button\r\n                className='btn-add-change'\r\n                type=\"submit\"\r\n                onClick={handleSubmit}\r\n            >\r\n                {state.model.id ? 'change' : 'add'}\r\n            </button>\r\n        </form>\r\n    )\r\n}","D:\\js\\staj\\react\\react-task1\\todo\\src\\components\\form-item\\form-item.js",[],"D:\\js\\staj\\react\\react-task1\\todo\\src\\components\\form-list\\form-list.js",[],"D:\\js\\staj\\react\\react-task1\\todo\\src\\container\\app\\app.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":37,"nodeType":"38","messageId":"39","endLine":1,"endColumn":43},{"ruleId":"40","severity":1,"message":"41","line":112,"column":8,"nodeType":"42","endLine":112,"endColumn":17,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'state'. Either include them or remove the dependency array. If 'setState' needs the current value of 'data', you can also switch to useReducer instead of useState and read 'data' in the reducer.","ArrayExpression",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [data, data.id, state]",{"range":"49","text":"50"},[2974,2983],"[data, data.id, state]"]